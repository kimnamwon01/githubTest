package backweb.a02_object.a01_access;

public class A01_AccessModifier {
/*
# 접근제어자.
1. 객체와 객체간의 연관관계 클래스 선언 시 필요하다.
2. 즉, 접근할 때, 객체단위, 필드단위, 생성자단위, 메서드단위로 설정하는 것을 말한다.
3. 예를 들어 자동차라는 객체는 타이어, 핸들, 의자, 속도계등의 객체를 혼합하여 만든 객체이다.
   이렇게 객체조합하여 효율적으로 프로그램을 하기 위한 것을 객체지향 프로그래밍 이라고 하는데,
4. 객체들 간에 구성요소에 대한 접근 범위를 설정하는 것을 접근제어자라고 한다.
# package
1. 객체들을 묶어주는 묶음 단위를 말하고,
2. 객체의 바탕이 되는 클래스 상단에 선언한다.
	package backweb.a02_object.a01_access;
3. 패키지는 동일한 이름을 가져ㅑ지 같은 패키지이자, 개층적인 개념을 가지고
	상위에 있는 패키지가 하위에 있는 패키지를 포함하는 개념을 가지고 있지는 않다.
	즉, package backweb.a02_object.a01_access;
	package backweb.a02_object; 이 두 패키지는 포함관계가 없는 다른 패키지이다.
4. 모든 클래스로부터 생성되는 객체의 패키지는 클래스 상단에 선언된 패키지의
	이름이 동일할 때, 동일한 패키지를 가진 객체라고 할 수 있다.
*/
}
